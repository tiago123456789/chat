</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="/js/ElementsHtml.js"></script>
<script src="/js/SocketFactory.js"></script>
<script src="/js/EmitEvent.js"></script>
<script src="/js/ListenerEvent.js"></script>
<script src="/js/BuildElement.js"></script>
<script>
    let roomSelected = null;
    let mediaRecorder = null;
    let audioPermission = false;

    navigator
        .mediaDevices
        .getUserMedia({ audio: true })
        .then( stream => {
            audioPermission = true
            mediaRecorder = new MediaRecorder(stream)
            let chunks = [];
            mediaRecorder.ondataavailable = data => chunks.push(data.data);
            mediaRecorder.onstop = () => {
                const reader = new window.FileReader()
                const blob = new Blob(chunks, { type: 'audio/ogg; codec=opus'})
                reader.readAsDataURL(blob)
                reader.onloadend = () => {
                    EmitEvent.emit('sendAudio', {typeMsg: "audio", content: reader.result, room: roomSelected });
                }

                chunks = []
            }
        }).catch(() => {
            mediaRecorder = null
            audioPermission = false
        });

    $('#send-audio')
        .mouseup(function(){
            if(audioPermission && roomSelected !=='') {
                mediaRecorder.stop()
            }
        })
        .mousedown(function(){
            if(audioPermission && roomSelected !=='') {
                mediaRecorder.start()
            }
        })
    ListenerEvent.watching("listRooms", (rooms) => {
        BuildElement.buildListRoom(rooms);
        joinRooms();
    });

    ListenerEvent.watching("newRoom", (room) => {
        BuildElement.buildRoom(room);
    });

    ListenerEvent.watching("listMessages", (messages) => {
        cleanListMessage();
        BuildElement.buildListMessage(messages);
    });

    ListenerEvent.watching("newMessage", (message) => {
        BuildElement.buildMessage(message);
        cleanFieldMessage();
    });

    ListenerEvent.watching("error", (error) => {
        BuildElement.buildAlertMessage({ alert: "danger", title: "Error!", subtitle: error})
    })

    $("#submit_new_room").on('click', () => {
        const room = $("#create_new_room").val();
        console.log(room);
        EmitEvent.emit("addNewRoom", room);
        $("#create_new_room").val('');
        closeModal();
    });

    $("#new_message_text").keyup(function(event) {
        event.preventDefault();
        const codeKeyBoardEnter = 13;
        const message = $("#new_message_text").val().trim();
        if (event.keyCode == codeKeyBoardEnter && message.length > 0 && roomSelected) {
            EmitEvent.emit("sendMsgText",
                {typeMsg: "msg", content: message, author: "Author test", room: roomSelected})
            $("div[data-alert='true']").remove();
        } else if (!$("div[data-alert='true']").hasClass("alert-warning") && !roomSelected) {
            BuildElement.buildAlertMessage({ alert: "warning", title: "Warning!", subtitle: "Selected one room!" });
        }
    })

    function closeModal() {
        $("#new_room").modal('hide');
    }

    function joinRooms() {
        $("a[data-room='true']").on('click', function() {
            const idRoom = $(this).attr("id");
            EmitEvent.emit("joinRoom", idRoom);
            roomSelected = idRoom;
        });
    }

    function cleanFieldMessage() {
        $("#new_message_text").val("");
    }

    function cleanListMessage() {
        $("#messages-chat").empty();
    }
</script>
</body>
</html>